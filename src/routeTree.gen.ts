/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as AuthGoogleAuthImport } from './routes/_auth/google-auth'
import { Route as AppHomeImport } from './routes/_app/home'
import { Route as AppUserUserIdImport } from './routes/_app/user/$userId'
import { Route as AppResultResultIdImport } from './routes/_app/result/$resultId'
import { Route as AppQuizQuizIdIndexImport } from './routes/_app/quiz/$quizId/index'
import { Route as AppQuizQuizIdAnswerImport } from './routes/_app/quiz/$quizId/answer'

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthGoogleAuthRoute = AuthGoogleAuthImport.update({
  id: '/google-auth',
  path: '/google-auth',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppHomeRoute = AppHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppUserUserIdRoute = AppUserUserIdImport.update({
  id: '/user/$userId',
  path: '/user/$userId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppResultResultIdRoute = AppResultResultIdImport.update({
  id: '/result/$resultId',
  path: '/result/$resultId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppQuizQuizIdIndexRoute = AppQuizQuizIdIndexImport.update({
  id: '/quiz/$quizId/',
  path: '/quiz/$quizId/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppQuizQuizIdAnswerRoute = AppQuizQuizIdAnswerImport.update({
  id: '/quiz/$quizId/answer',
  path: '/quiz/$quizId/answer',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/home': {
      id: '/_app/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppHomeImport
      parentRoute: typeof AppRouteImport
    }
    '/_auth/google-auth': {
      id: '/_auth/google-auth'
      path: '/google-auth'
      fullPath: '/google-auth'
      preLoaderRoute: typeof AuthGoogleAuthImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_app/result/$resultId': {
      id: '/_app/result/$resultId'
      path: '/result/$resultId'
      fullPath: '/result/$resultId'
      preLoaderRoute: typeof AppResultResultIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/user/$userId': {
      id: '/_app/user/$userId'
      path: '/user/$userId'
      fullPath: '/user/$userId'
      preLoaderRoute: typeof AppUserUserIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/quiz/$quizId/answer': {
      id: '/_app/quiz/$quizId/answer'
      path: '/quiz/$quizId/answer'
      fullPath: '/quiz/$quizId/answer'
      preLoaderRoute: typeof AppQuizQuizIdAnswerImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/quiz/$quizId/': {
      id: '/_app/quiz/$quizId/'
      path: '/quiz/$quizId'
      fullPath: '/quiz/$quizId'
      preLoaderRoute: typeof AppQuizQuizIdIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppHomeRoute: typeof AppHomeRoute
  AppResultResultIdRoute: typeof AppResultResultIdRoute
  AppUserUserIdRoute: typeof AppUserUserIdRoute
  AppQuizQuizIdAnswerRoute: typeof AppQuizQuizIdAnswerRoute
  AppQuizQuizIdIndexRoute: typeof AppQuizQuizIdIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppHomeRoute: AppHomeRoute,
  AppResultResultIdRoute: AppResultResultIdRoute,
  AppUserUserIdRoute: AppUserUserIdRoute,
  AppQuizQuizIdAnswerRoute: AppQuizQuizIdAnswerRoute,
  AppQuizQuizIdIndexRoute: AppQuizQuizIdIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthGoogleAuthRoute: typeof AuthGoogleAuthRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthGoogleAuthRoute: AuthGoogleAuthRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteRouteWithChildren
  '/home': typeof AppHomeRoute
  '/google-auth': typeof AuthGoogleAuthRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthIndexRoute
  '/result/$resultId': typeof AppResultResultIdRoute
  '/user/$userId': typeof AppUserUserIdRoute
  '/quiz/$quizId/answer': typeof AppQuizQuizIdAnswerRoute
  '/quiz/$quizId': typeof AppQuizQuizIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AppRouteRouteWithChildren
  '/home': typeof AppHomeRoute
  '/google-auth': typeof AuthGoogleAuthRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthIndexRoute
  '/result/$resultId': typeof AppResultResultIdRoute
  '/user/$userId': typeof AppUserUserIdRoute
  '/quiz/$quizId/answer': typeof AppQuizQuizIdAnswerRoute
  '/quiz/$quizId': typeof AppQuizQuizIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_app/home': typeof AppHomeRoute
  '/_auth/google-auth': typeof AuthGoogleAuthRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_auth/': typeof AuthIndexRoute
  '/_app/result/$resultId': typeof AppResultResultIdRoute
  '/_app/user/$userId': typeof AppUserUserIdRoute
  '/_app/quiz/$quizId/answer': typeof AppQuizQuizIdAnswerRoute
  '/_app/quiz/$quizId/': typeof AppQuizQuizIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/home'
    | '/google-auth'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/result/$resultId'
    | '/user/$userId'
    | '/quiz/$quizId/answer'
    | '/quiz/$quizId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/home'
    | '/google-auth'
    | '/sign-in'
    | '/sign-up'
    | '/'
    | '/result/$resultId'
    | '/user/$userId'
    | '/quiz/$quizId/answer'
    | '/quiz/$quizId'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/home'
    | '/_auth/google-auth'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_auth/'
    | '/_app/result/$resultId'
    | '/_app/user/$userId'
    | '/_app/quiz/$quizId/answer'
    | '/_app/quiz/$quizId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/home",
        "/_app/result/$resultId",
        "/_app/user/$userId",
        "/_app/quiz/$quizId/answer",
        "/_app/quiz/$quizId/"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/google-auth",
        "/_auth/sign-in",
        "/_auth/sign-up",
        "/_auth/"
      ]
    },
    "/_app/home": {
      "filePath": "_app/home.tsx",
      "parent": "/_app"
    },
    "/_auth/google-auth": {
      "filePath": "_auth/google-auth.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_app/result/$resultId": {
      "filePath": "_app/result/$resultId.tsx",
      "parent": "/_app"
    },
    "/_app/user/$userId": {
      "filePath": "_app/user/$userId.tsx",
      "parent": "/_app"
    },
    "/_app/quiz/$quizId/answer": {
      "filePath": "_app/quiz/$quizId/answer.tsx",
      "parent": "/_app"
    },
    "/_app/quiz/$quizId/": {
      "filePath": "_app/quiz/$quizId/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
